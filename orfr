from Bio import Seq
import re

data = '''GATATATGAGGGAGCTTCGGGGCTAACGGGTACGTTATGCTCCCGATTGTACATTTAGTA
AACTACCCGAACCAAGGTGGCTTTTTGTCGTCCAGAGAATCAGTCCTTCACTACGTGCGG
AGAGCGTGAACATGTTTACCATGGATATCGCACATCCGTGTACGACGATCCCTCGTTAAG
GTTCTTATCACTCATCAGGAAACTATCTCCCAGCGTGTCTCCTCTCTGTATTAAGAGGGT
CGGCTATGTTTGTTTCTTTTCCTAGAGGACGATTTCTTGGCGAATAAAAAATCGCAGAAC
TGGCACTTGAAGATTGAGGTGTCACTAGTCCCAACCTCTGTCCTGCTCGACCAGGCTAGC
GAGTAGACATTCTCTTACATTCACGGTAGACATCTCTCAGGGCACGTCCATTGATGGAAA
CGATCAACTTGAACTATACCTAGCTAGGTATAGTTCAAGTTGATCGTTTCCATACAGGTT
ACAGCTACGTTGGCCCCAAAGAAACCAAGTATAGGTATAACTCCCACTAATGTAAAATAC
GAGGTCTTTTCACGTTCACGCCGTCATGTAGCTCGTCAGGATTAACCGACGACACCCCAC
CTCGTGTTGTGTCCTACAAACCTTGATCGATCGACTGTTAGTACACTGTGTCCAGAACGG
AGTATAATTGCTTACTAAGGAACTCCTCGAGAGCGCATACGCCCCGCACAGCCAGGTCAA
TGTCCGAGATGCTATTCTGGTATAGGCCTCGGAATGCCTGCTGGTTTTTCTCCTGCCACT
TGCGACGAAGGATTTGCTGTGCCGTCCCTGCACTACCACGCACCGTCCATGGTCGAGCTC
GAGTACATCTTCTGATGCGCGTACCATCGGCGTGACTCTCCATAAG'''

data = ''.join(data.split())
rc = Seq.reverse_complement(data)
ORFs = list()


def TrimToFit(seq):
	"""Trims off end of a sequence to a whole number of codons"""
	if len(seq) % 3 == 1:
		return seq[:-1]
	elif len(seq) % 3 == 2:
		return seq[:-2]
	else:
		return seq

for match in re.finditer('ATG', str(data)):
	if '*' in Seq.translate(TrimToFit(data[match.start():])):
		ORFs.append(Seq.translate(TrimToFit(data[match.start():]), to_stop=True))
for match in re.finditer('ATG', str(rc)):
	if '*' in Seq.translate(TrimToFit(rc[match.start():])):
		ORFs.append(Seq.translate(TrimToFit(rc[match.start():]), to_stop=True))

ORFs = set(ORFs)
for item in ORFs:
	print item
